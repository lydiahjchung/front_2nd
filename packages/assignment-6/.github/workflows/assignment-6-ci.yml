on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main
      - assignment/6
    paths:
      - "packages/assignment-6/**"

jobs:
  # job1: tsc, build 실행, 오류 발생하면 코멘트 남김
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install
        working-directory: packages/assignment-6

      - name: TypeScript Check
        run: pnpm run tsc
        working-directory: packages/assignment-6
        continue-on-error: true

      - name: Comment on TypeScript Check failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'The TypeScript check has failed. Please check the logs for more details.'
            })

      - name: Build
        run: pnpm run build
        continue-on-error: true

      - name: Comment on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'The build has failed. Please check the logs for more details.'
            })

# job2: eslint 실행, eslint에서 오류 발생 시 report를 코멘트에 남김
#     lint:
#       runs-on: ubuntu-latest
#       steps:
#         - name: job2 구현
#           run: echo "job2의 내용을 구현해주세요"

# job3: 테스트 실행, 커버리지 측정, 코멘트 남김
#     test:
#       runs-on: ubuntu-latest
#       steps:
#         - name: job3 구현
#           run: echo "job3의 내용을 구현해주세요"

# job4: lighthouse ci 실행, 실행 결과를 코멘트로 남김
#     lighthouse:
#       runs-on: ubuntu-latest
#       steps:
#         - name: job4 구현
#           run: echo "job4의 내용을 구현해주세요"

# job5: PR이 open 될 때만 실행됨, 팀원 중 한 명을 랜덤으로 선정하여 리뷰어 지정, 코멘트에 멘션해서 올림
#     assign_reviewer:
#       runs-on: ubuntu-latest
#       steps:
#         - name: job5 구현
#           run: echo "job5의 내용을 구현해주세요"

